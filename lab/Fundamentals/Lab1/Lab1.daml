module Fundamentals.Lab1.Lab1 where
import Daml.Script

-- Course 1: Functional Programming in Daml
-- 1. Write a function named quadFunction that takes three integers for x, y, and z. It returns the value of
-- 3x2 + 2y + z
quadFunction: Int -> Int -> Int ->Int
quadFunction x y z = 3*x^2 + 2*y + z
-- 2. Write a test-script that tests quadFunction as
testquadFunction: Script()
testquadFunction = script do
    debug $ quadFunction 1 2 3

-- 3. Write a lambda function in the test script that does the same calculation as the quadFunction described above and prints the same result as shown above.
testquadLambdaFunction : Script ()
testquadLambdaFunction = script do
    debug $ (\x y z->3*x^2 + 2*y + z) 1 2 3

-- Write a function named doubleMe that takes an integer and returns its double.
doubleMe: Int -> Int
doubleMe x = 2*x;

doubleUs: Int ->Int -> Int
doubleUs x y= 2 *(x+y);

testDouble:Script()
testDouble = script do
    debug $ doubleMe 3
    debug $ doubleUs 3 4 

-- Write an expression in the test-script using doubleUs with an inFix notation to get the same result as
testDoubleUsInfix:Script()
testDoubleUsInfix = script do
    debug $ 3 `doubleUs` 4
